---

- name: Clone 'DesignSafe-CI/portal' repository
  git: repo=https://github.com/DesignSafe-CI/portal.git dest=/designsafe/portal version={{ version }}
  notify:
    - restart uwsgi

- name: Copy designsafe ENV
  template: src=designsafe.env.j2 dest=/designsafe/designsafe.env
  notify:
    - restart uwsgi

- name: Copy docker-compose
  copy: src=docker-compose-native.yml dest=/designsafe/docker-compose.yml
  notify:
    - restart uwsgi

- name: Copy docker-compose-ef
  copy: src=docker-compose-native-ef.yml dest=/designsafe/docker-compose-ef.yml
  notify:
    - restart uwsgi

# - name: Build docker containers
#   command:
#        docker-compose -f docker-compose-native.yml build

# - name: Build ef docker containers
#   command:
#        docker-compose -f docker-compose-native-ef.yml build
#   args:
#        chdir: /designsafe

# - name: Build docker containers
#   tasks:
#     - docker_service:
#         project_src: /designsafe
#         build: yes
      # register: output


# - name: Checkout application repository
#   git: repo=https://{{ githubuser }}:{{ githubpassword }}@github.com/{{ github_repo )) dest=/project/code/repo version={{ app_version }}
#   notify:
#     - restart uwsgi

# - name: Build application docker image
#   command: docker build -t {{ docker_image }}:{{ app_version }} /project/code/repo
#   notify: restart app-service

# - name: Change ownership of application files
#   file: path=/opt/mirrors state=directory owner=mirrors group=mirrors

# - name: Change ownership of application files
#   file: path=/opt/mirrors/logs state=directory owner=mirrors group=mirrors

# - name: Change ownership of application files
#   file: path=/opt/mirrors/static state=directory owner=mirrors group=mirrors

# - name: Change ownership of application files
#   file: path=/opt/mirrors/media state=directory owner=mirrors group=mirrors

# - name: Clone 'iPlantCollaborativeOpenSource/datastore-public' repository
#   git: repo=https://github.com/iPlantCollaborativeOpenSource/datastore-public.git dest=/opt/mirrors/datastore-public version={{ dc_version }}
#   notify:
#     - restart uwsgi

# - name: Configure application virtualenv
#   command: virtualenv /opt/mirrors/venv

# - name: Install application requirements
#   pip: requirements=/opt/mirrors/datastore-public/requirements.txt virtualenv=/opt/mirrors/venv
#   notify:
#     - restart uwsgi

# - name: Django Collect Static
#   command: /opt/mirrors/venv/bin/python /opt/mirrors/datastore-public/manage.py collectstatic --noinput
#   become: yes
#   become_user: mirrors

# - name: Copy DataCommons ENV
#   template: src=datastore.env.j2 dest=/opt/mirrors/datastore.env
#   notify:
#     - restart uwsgi
